/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package redlibrarian.GUI;

import java.awt.Color;
import java.awt.Component;
import java.util.ArrayList;
import java.util.List;
import javax.swing.JTable;
import javax.swing.SwingConstants;
import javax.swing.table.DefaultTableCellRenderer;
import javax.swing.table.DefaultTableModel;
import redlibrarian.music.Library;
import redlibrarian.music.Song;

/**
 *
 * @author admir
 */
public class LibraryPane extends javax.swing.JPanel {

    /**
     * Creates new form LibraryPane
     */
    public LibraryPane() {
        initComponents();
    }

    public LibraryPane(Library lib) {
        
        this();
        
        DefaultTableCellRenderer renderer = new DefaultTableCellRenderer(){
            
            @Override
            public Component getTableCellRendererComponent(JTable table, Object value, boolean isSelected, boolean hasFocus, int row, int column) {
                LibraryTableModel model = (LibraryTableModel) table.getModel();
                Component c = super.getTableCellRendererComponent(table, value, isSelected, hasFocus, row, column);
                c.setBackground(model.getRowColor(row));
                return c;
             }
            
        };
        

        renderer.setHorizontalAlignment(SwingConstants.LEFT);        
        LibraryTableModel model = (LibraryTableModel) table.getModel();

        for(int x=0; x<model.getColumnCount();x++)
            table.getColumnModel().getColumn(x).setCellRenderer(renderer);
        
        int row = 0;
        
        for(Song song : lib.getContents()) {
            model.addRow(new Object[]{song.getPseudoId(), song.getTitle(), song.getComposer()});
            if(!song.isAvailable())
                model.setRowColor(row, Color.RED);
            else
                model.setRowColor(row, Color.WHITE);
                
            row++;    
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        table = new javax.swing.JTable();

        table.setModel(new LibraryTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "Title", "Composer"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(table);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 405, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 307, Short.MAX_VALUE)
        );
    }// </editor-fold>//GEN-END:initComponents


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable table;
    // End of variables declaration//GEN-END:variables

    private static class LibraryTableModel extends DefaultTableModel {

        List<Color> rowColors = new ArrayList<>();      

        LibraryTableModel(Object [][] obj, String [] str){
            super(obj, str);
        }
        
        public void setRowColor(int row, Color c) {
            if(rowColors.size()>row)
                rowColors.set(row, c);
            else
                rowColors.add(c);
            
            fireTableRowsUpdated(row, row);
        }
        
        private Color getRowColor(int row) {
            if(rowColors.size()>0)
                return rowColors.get(row);
            return Color.YELLOW;
        }
        
        
    }
}
